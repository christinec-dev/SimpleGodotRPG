extends Node2D

#save game
var loadSavedGame = false

func save():
	# the function creates a dictionary called data, which contains some properties whose values are the dictionaries generated by the saveToDictionary() functions we saw earlier.
	var data = {
		"player": $Player.saveToDictionary(),
		"fiona": $Fiona.saveToDictionary(),
		"skeleton": $SkeletonSpawner.saveToDictionary(),
		"potion1": is_instance_valid(get_node("/root/Root/StartPotion1")),
		"potion2": is_instance_valid(get_node("/root/Root/StartPotion2"))
	}
	
	#To save the file, we first create a new object of type File.
	var file = File.new()
	#Then we call the open() method, which requires two parameters: the path to the file to be opened and the opening mode (in this case, we want to write to the file).
	file.open("user://savegame.json", File.WRITE)
	var json = to_json(data)
	#The file path uses the special path user://, which represents, in a platform-independent way, the location available to the user to save files.
	#The next line uses the to_json() function to convert the given dictionary into a string, which is saved in the json variable. 
	#Then the file store_line() function is called to save the string inside the file.
	file.store_line(json)
	file.close()

func _ready():
	var file = File.new()
	#To load the game, the save file is opened for reading, the JSON string is read with the get_as_text() method and converted into a dictionary using the parse_json function
	if loadSavedGame and file.file_exists("user://savegame.json"):
		file.open("user://savegame.json", File.READ)
		var data = parse_json(file.get_as_text())
		file.close()
		
		$Player.fromDictionary(data.player)
		$Fiona.fromDictionary(data.fiona)
		$SkeletonSpawner.fromDictionary(data.skeleton)
		
		#. Finally, we check some dictionary values to decide whether to remove the potions and Fionaâ€™s necklace from the scene tree.
		if($Fiona.necklaceFound):
			$Necklace.queue_free()
		if(not data.potion1):
			$StartPotion1.queue_free()
		if(not data.potion2):
			$StartPotion2.queue_free()
